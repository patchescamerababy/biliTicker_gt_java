name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (artifact upload)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows (MSVC)
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
          - os: windows-latest
            target: i686-pc-windows-msvc
            name: windows-i686
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            name: windows-aarch64
          # Linux (GNU)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            name: linux-i686
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Add target ${{ matrix.target }}
        run: rustup target add ${{ matrix.target }}

      - name: Install system deps (Linux 32-bit)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib

      - name: Build JNI library
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifact
        run: |
          mkdir -p dist
          # 把编译产物（.dll/.so/.dylib）打包到 ZIP
          zip -j dist/jni-${{ matrix.name }}.zip \
            target/${{ matrix.target }}/release/*.dll \
            target/${{ matrix.target }}/release/*.so \
            target/${{ matrix.target }}/release/*.dylib || true

      - name: Upload build artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: jni-${{ matrix.name }}
          path: dist/jni-${{ matrix.name }}.zip

      - name: Create GitHub Release & upload asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/jni-${{ matrix.name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
