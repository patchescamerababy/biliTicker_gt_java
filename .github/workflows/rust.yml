name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.artifact_name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # —— Windows —— #
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: windows-x86_64
          # - os: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   artifact_name: windows-aarch64
          # —— Linux —— #
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: linux-x86_64
          # —— macOS —— #
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: macos-aarch64

    steps:
      # 1️⃣  取仓库
      - uses: actions/checkout@v3

      # 2️⃣  安装 Rust（也可用 runner 自带 rustup）
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # 3️⃣  添加目标三元组
      - name: Add target
        run: rustup target add ${{ matrix.target }}

      # 6️⃣  构建
      - name: Cargo build (all)
        run: |
          cargo build --release --target ${{ matrix.target }}

      # 7️⃣  打包产物
      - name: Package
        shell: bash
        run: |
          mkdir -p dist
          zip -j "dist/jni-${{ matrix.artifact_name }}.zip" \
              target/${{ matrix.target }}/release/*.dll \
              target/${{ matrix.target }}/release/*.so \
              target/${{ matrix.target }}/release/*.dylib \
              target/${{ matrix.target }}/release/*.lib 2>/dev/null || true

      # 8️⃣  主分支：上传调试 Artifact
      - name: Upload artifact (main)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: jni-${{ matrix.artifact_name }}
          path: dist/jni-${{ matrix.artifact_name }}.zip
          retention-days: 90

      # 9️⃣  打 Tag：发布 Release 并上传资产
      - name: Publish Release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: dist/jni-${{ matrix.artifact_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
